#!/usr/bin/env node

// npm install uNetworking/uWebSockets.js#v17.3.0

const UDP_PORT = 5680;

const WS_HOST = '127.0.0.1';
const WS_PORT = 3100;

const HTTP_HOST = '127.0.0.1';
const HTTP_PORT = 3101;

const WebSocket = require('uWebSockets.js');
const dgram = require('dgram');

const http = require("http");

let merger_data = {};

const WebSocketServer = WebSocket.App().ws('/*', {
  /* Options */
  compression: 0,
  maxPayloadLength: 16 * 1024 * 1024,
  idleTimeout: 10,

  /* Handlers */
  open: (ws) => {
    /* Let this client listen to topic "broadcast" */
    ws.subscribe('all');
  },
  message: (ws, message, isBinary) => {
    /* Broadcast this message */
    //ws.publish('broadcast', message, isBinary);
  },
  drain: (ws) => {

  },
  close: (ws, code, message) => {
    /* The library guarantees proper unsubscription at close */
  }
}).any('/*', (res, req) => {
  res.end('Nothing to see here!');
}).listen(WS_PORT, (state) => {
  if (state) {
    console.log('Websocket server listening to port ' + WS_PORT);
  } else {
    console.log('Websocket server failed to listen to port ' + WS_PORT);
  }
});


const requestListener = function (req, res) {
    res.setHeader("Content-Type", "application/json");
    if(req.url.startsWith("/hamtv/merger/httpstats"))
    {
      res.writeHead(200);
      res.end(JSON.stringify(merger_data));
    }
    else
    {
      res.writeHead(404);
      res.end(JSON.stringify({error:`Resource not found: ${req.url}`}));
    }
}

const httpserver = http.createServer(requestListener);
httpserver.listen(HTTP_PORT, HTTP_HOST, () => {
    console.log(`HTTP Server listening on http://${HTTP_HOST}:${HTTP_PORT}`);
});


let server = dgram.createSocket('udp4');

server.on('message', function (message, remote) {
    const msg = message.toString();

    WebSocketServer.publish('all', msg);

    const message_obj = JSON.parse(msg);
    if('type' in message_obj)
    {
      merger_data[message_obj['type']] = message_obj;
      merger_data['updated'] = Date.now();
    }
});

console.log(`Setting up UDP server..`);
server.bind(UDP_PORT, '127.0.0.1');
